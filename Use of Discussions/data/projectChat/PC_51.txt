2020
10
Remove_noratelimit_for_bots
Hello all,
As you may know, over the past months we’ve been struggling with more and more bots editing Wikidata at a very high rate, causing infrastructure issues having an impact on the Query Service that couldn’t keep up with the changes and on tools such as Pywikibot. 
Over the years, we tried different things (like Add Wikidata query service lag to Wikidata maxlag, increase maxlag or factor, limit the edit rate for all accounts). Wikidata admins also approached individual bot owners to ask them to comply with the bot policy’s limit, sometimes without success.
Recently, we discussed removing the noratelimit feature for the bots group. This would have as an effect to limit the edits to 90 edits/min for most of the bots ; the few bots that need an unlimited rate to function (for example MassMessage) can be added to the existing accountcreator group (with the possibility to rename this group).
Many thanks to bot owners who gave input in the comments of the ticket and helped us frame this solution. If you want to continue the discussion, please have a look at these comments, so we can build from them and avoid restarting the discussion from scratch.
We hope that this solution will allow a fair access to mass editing Wikidata, while preserving the existing infrastructure and avoiding hitting too hard on the Query Service. In the meantime we are working together with the Search Team at the WMF and others on improvements to the Query Service scalability and alternatives to it so some load can be redirected to other systems, as well as general infrastructure improvements.
Unless there’s a strong opposition from the community to this change, we will implement it on October 20th.
If you have any questions or need more information, feel free to add a comment below or in the ticket. Thanks, Lea Lacroix (WMDE) (talk) 11:44, 8 October 2020 (UTC)

Thanks Lea, it is nice to see that this issue is being addressed. Vojtěch Dostál (talk) 13:33, 8 October 2020 (UTC)
I think I would prefer this not to be bundled with the account creator right but into a new right, so that it's more obvious to people that the right has something to do with the ability of a bot to go over the edit limit. ChristianKl ❪✉❫ 14:00, 8 October 2020 (UTC)
See c:Commons:Village_pump/Proposals/Archive/2018/01#Proposal_to_rename_account_creator_group_to_batch_uploaders.--GZWDer (talk) 16:55, 8 October 2020 (UTC)
Currently we still have such issues: 1. some user groups (e.g. sysops and global rollbackers) have noratelimit and 2. QuickStatements does not use a rate limit at all.--GZWDer (talk) 17:01, 8 October 2020 (UTC)
@GZWDer: I believe QuickStatements, since it acts on behalf of a user, is limited by the rate limit on that user account. Of course if 100 users are using it at once that means it could operate at 100 x the individual user limit. Though I assume Magnus has some limit on total simultaneous batches (I think it was 16 but that may have changed?) ArthurPSmith (talk) 19:59, 8 October 2020 (UTC)
When 100 users are using QuickStatements it is one hundred users using the service.. IMHO they have precedence over unrestricted bots uploading data that is hardly any value and or not maintainable and or not scalable. We discussed earlier restriction on what datasets may be uploaded, I was even challenged to make a proposal and I did. Thanks, GerardM (talk) 05:08, 9 October 2020 (UTC)
Whether or not data is adding value or maintainable doesn't depend on whether it's uploaded through a bot account or QuickStatements. For bots at least there's a community decision that the bot edits add enough value to merit an approval. ChristianKl ❪✉❫ 16:55, 9 October 2020 (UTC)
Yes it is limited by rate limit, but it also means it will results in issues such as phab:T264450. In addition, users may sometimes not edit at sll if QuickStatements batches are running. QS should use a throttle that is strictly lower than 90/min.--GZWDer (talk) 20:04, 8 October 2020 (UTC)
Maybe edits should be throttled by the number of cleanup edits they require .. so if a bot required more than 1000 cleanup edits, it should be throttled to 10% of max. --- Jura 13:54, 9 October 2020 (UTC)
This is not a well-defined figure.--GZWDer (talk) 17:04, 9 October 2020 (UTC)
BTW, it works in a similar way for the description suggestion tool. There it's 3 reverts. --- Jura 06:06, 10 October 2020 (UTC)
Are all edits equally hard on the server backend? would it be possible to consider metering at a level finer than "edit count"? 90 edits/min is probably not an issue for me though. BrokenSegue (talk) 20:15, 9 October 2020 (UTC)
@Lea For a long time regular bots (and it' owners) are second class citizens in the Wikidata universe. What kind of hardware measeures have been done to solve the problem? I'm only aware of restrictions implemented by software. --Succu (talk) 20:39, 9 October 2020 (UTC)
@BrokenSegue: edit count is the usual metric we use. Do you have other suggestions?
@Succu: a few years ago, Wikidata was moved to its own server. The Search Platform team at WMF is currently looking for solutions to improve the Query Service, implement a new updater, etc. But the broad issue (we have a huge database, very frequently edited and queried, with a need for immediately up-to-date results) is extremely complex and cannot be solved by throwing more hardware. For more information, see the updates by Guillaume Lederrey on the Wikidata mailing-list. Lea Lacroix (WMDE) (talk) 11:03, 12 October 2020 (UTC)
@Lea Lacroix (WMDE): I mean I don't know what's feasible but rate limiting weighted by edit size would maybe make sense. Or perhaps edits to some kinds of data are more taxing than others e.g. references v. names v. qualifiers. BrokenSegue (talk) 02:06, 13 October 2020 (UTC)
On the good side, this is good kick for tool authors to optimize their edit count. Namely, QuickStatements can easily spam one editor's watchlist by editing a single property of a few elements (adding statement -> adding qualifier -> adding qualifier -> adding qualifier -> adding reference, adding statement -> adding qualifier -> adding qualifier -> adding qualifier -> adding reference, etc). --Lockal (talk) 11:22, 12 October 2020 (UTC)
But bear in mind that tool authors are limited by what the API and the API wrappers they're using offer. The last time I used pywikibot (which seems to be by far the most common), I had to hack together my own function for creating edits in order to do something as obvious as including a reference when adding a statement (instead of adding the reference separately)... but most people are not going to go to the trouble of doing that when the provided functions (which create two edits) work fine. - Nikki (talk) 12:01, 13 October 2020 (UTC)
This should be fine for me, I might need to modify my bot scripts a bit but not a huge deal. I agree with Christian that the rate limit opt-out role should be a distinct role specifically meant for special-case bots. Out of curiosity, was any notification sent on the mailing lists for this change? I don't see one. Nicereddy (talk) 01:58, 13 October 2020 (UTC)
Oh, one thing. @Lea Lacroix (WMDE): just to clarify, this'll only impact edits, right? API calls (e.g. request info about claims or labels) are uneffected? Nicereddy (talk) 02:02, 13 October 2020 (UTC)
The read-only API calls should not be impacted.
The change was mentioned in the Weekly Summary this week, but thanks for the reminder, I will also send a dedicated email. Lea Lacroix (WMDE) (talk) 10:13, 13 October 2020 (UTC)

